name: PR Unit Testing

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggers the workflow on pull request events
  pull_request:

env:
  PHP_VERSION: '7.4'
  WP_VERSION: '5.9.*'
  WP_MULTISITE: 0
  COMPOSER_VERSION: '2.2'
  ACTION_VERSION: 2

jobs:
  pr_unit_testing:
    runs-on: ubuntu-latest

    name: 'Unit Test PR in Latest Stable Requirements'

    steps:
    - name: Checkout Code
      # https://github.com/marketplace/actions/checkout
      uses: actions/checkout@v2

    - name: Get Composer Cache Directory
      id: composer-cache
      if: ${{ !env.ACT }}
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Cache Composer dependencies
      if: ${{ !env.ACT }}
      uses: actions/cache@v2
      env:
        composer-cache-name: cache-composer
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-build-${{ env.composer-cache-name }}-wp-${{ env.WP_VERSION }}-v${{ env.ACTION_VERSION }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.composer-cache-name }}-wp-${{ env.WP_VERSION }}-v${{ env.ACTION_VERSION }}-

    - name: Setup Node Environment
      # https://github.com/marketplace/actions/setup-node-js-environment
      uses: actions/setup-node@v2
      with:
        node-version-file: '.nvmrc'
        cache: ${{ !env.ACT && 'npm' || '' }}

    - name: Setup PHP & Composer Environment
      # https://github.com/marketplace/actions/setup-php-action
      uses: shivammathur/setup-php@v2
      with:
        php-version: "${{ env.PHP_VERSION }}"
        tools: "composer:${{ env.COMPOSER_VERSION }}"

    - name: Environment Check
      run: php -v && composer --version

    - name: Require Specified WordPress Version
      run: composer require johnpbloch/wordpress-core:${{ env.WP_VERSION }} php-stubs/wordpress-stubs:${{ env.WP_VERSION }} wp-phpunit/wp-phpunit:${{ env.WP_VERSION }} --dev --prefer-source --update-with-all-dependencies

    - name: Install Composer Dependencies
      run: composer install --prefer-dist

    - name: NPM Setup
      run: npm ci

    - name: Unit Tests
      run: npm run test
